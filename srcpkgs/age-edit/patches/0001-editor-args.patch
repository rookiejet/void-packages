commit d0fbacb9859bdf2655679f0b104ccf4e3d0cdc7d
Author: Mazin Fadl <mazen@illumed.net>
Date:   Fri Aug 15 15:54:23 2025 -0400

    feat: allow arguments for editor

diff --git a/main.go b/main.go
index 32e5d27..dea0ba0 100644
--- a/main.go
+++ b/main.go
@@ -197,6 +197,64 @@ func loadIdentities(path string) ([]age.Identity, []age.Recipient, error) {
 	return identities, recipients, nil
 }
 
+func parseEditorCommand(editorCmd string) (string, []string) {
+	// Simple shell-like parsing that handles quotes and escaping.
+	var parts []string
+	var current strings.Builder
+	inQuote := false
+	var quoteChar rune
+	escaped := false
+
+	for _, r := range editorCmd {
+		if escaped {
+			current.WriteRune(r)
+			escaped = false
+			continue
+		}
+
+		if r == '\\' && !inQuote {
+			escaped = true
+			continue
+		}
+
+		if !inQuote && (r == '"' || r == '\'') {
+			inQuote = true
+			quoteChar = r
+			continue
+		}
+
+		if inQuote && r == quoteChar {
+			inQuote = false
+			continue
+		}
+
+		if !inQuote && (r == ' ' || r == '\t') {
+			if current.Len() > 0 {
+				parts = append(parts, current.String())
+				current.Reset()
+			}
+			continue
+		}
+
+		current.WriteRune(r)
+	}
+
+	if current.Len() > 0 {
+		parts = append(parts, current.String())
+	}
+
+	if len(parts) == 0 {
+		return "", nil
+	}
+
+	args := parts[1:]
+	if len(args) == 0 {
+		args = nil
+	}
+
+	return parts[0], args
+}
+
 func edit(idsPath, encPath, tempDirPrefix string, armor bool, editor string, readOnly bool) (tempDir string, err error) {
 	var exists bool
 	exists, err = checkAccess(encPath, readOnly)
@@ -251,7 +309,11 @@ func edit(idsPath, encPath, tempDirPrefix string, armor bool, editor string, rea
 		}
 	}
 
-	cmd := exec.Command(editor, tempFile)
+	editorName, editorArgs := parseEditorCommand(editor)
+
+	args := append(editorArgs, tempFile)
+
+	cmd := exec.Command(editorName, args...)
 	cmd.Stdin = os.Stdin
 	cmd.Stdout = os.Stdout
 	cmd.Stderr = os.Stderr
diff --git a/main_test.go b/main_test.go
index ee23002..9011bc6 100644
--- a/main_test.go
+++ b/main_test.go
@@ -5,6 +5,7 @@ import (
 	"os"
 	"os/exec"
 	"path/filepath"
+	"reflect"
 	"runtime"
 	"testing"
 
